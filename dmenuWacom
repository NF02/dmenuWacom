#!/bin/env zsh
# author: NFVblog aka Nicola Ferru <ask dot nfvblog at outlook dot it>

PAD=`xsetwacom --list devices | awk '/PAD/||/pad/||/Pad/' | awk -F "id:" '{print $1}' | cut -d " " -f1-8  | sed -e 's/[[:space:]]*$//'`

STYLUS=`xsetwacom --list devices | awk '/STYLUS/||/stylus/||/Stylus/' | awk -F "id:" '{print $1}' | cut -d " " -f1-8  | sed -e 's/[[:space:]]*$//'`

MONITORS=`xrandr --listmonitors | awk '{print $2}' | grep - | sed 's/+//' | sed 's/*//'`

if [[ $1 == --version ]] || [[ $1 == -v ]] || [[ $1 == -VERSION ]]; then
	cat << 'EOF'
╺┳┓┏┳┓┏━╸┏┓╻╻ ╻╻ ╻┏━┓┏━╸┏━┓┏┳┓   ┏━┓ ┏━┓   ┏┓ ┏━╸╺┳╸┏━┓
 ┃┃┃┃┃┣╸ ┃┗┫┃ ┃┃╻┃┣━┫┃  ┃ ┃┃┃┃   ┃┃┃ ╺━┫   ┣┻┓┣╸  ┃ ┣━┫
╺┻┛╹ ╹┗━╸╹ ╹┗━┛┗┻┛╹ ╹┗━╸┗━┛╹ ╹   ┗━┛╹┗━┛   ┗━┛┗━╸ ╹ ╹ ╹
EOF
	exit 0
fi

if [[ $PAD == "" ]]; then
	notify-send "💀 pad not found"
	exit 1
fi

if [[ $1 == --clear ]] || [[ $1 == -c ]] || [[ $1 == -CLEAR ]]; then
	echo "" > dmw_history
	exit 0
fi


ScreenLocking(){
	launcher_app=$(echo -e "$MONITORS" | dmenu -i -p Applicationslay: ")
	xinput map-to-output "$STYLUS" $launcher_app
}

ScreenRotation(){
	rotate="left\nright\nnormal"
	launcher_app=$(echo -e "$rotate" | dmenu -i -p "Select the direction of rotation: ")
	case $launcher_app in
		"left") 
			xinput set-prop "$STYLUS" --type=float "Coordinate Transformation Matrix" 0 -1 1 1 0 0 0 0 1;;
		"right")
			xinput set-prop "$STYLUS" --type=float "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1;;
		"normal")
			xinput set-prop "$STYLUS" --type=float "Coordinate Transformation Matrix" 0 0 0 0 0 0 0 0 0;;

	esac
}

Applications_profiles() {
	if [[ $PAD != "Wacom Intuos S Pad pad" ]] && [[ $PAD != "Wacom Intuos M Pad pad" ]] && [[ $PAD != "TABLET Pen Tablet Pad pad" ]];then
		notify-send "💀 Pad not supported"
		exit 1
	fi
	app="Krita\nGimp\nInkscape\nOlive Video Editor\n"
	launcher_app=$(echo -e "$app" | dmenu -i -p "Application profiles: ")
	case $launcher_app in
		"Krita")
			xsetwacom set "$PAD" Button 1 key b &&
			xsetwacom set "$PAD" Button 2 key f &&
			xsetwacom set "$PAD" Button 3 key +ctrl t -ctrl &&
			xsetwacom set "$PAD" Button 8 key +ctrl z -ctrl &&
			krita & notify-send " $launcher_app app. profile"
		;;
		"Gimp")
			xsetwacom set "$PAD" Button 1 key p &&
			xsetwacom set "$PAD" Button 2 key r &&
			xsetwacom set "$PAD" Button 3 key +shift e -shift &&
			xsetwacom set "$PAD" Button 8 key +ctrl z -ctrl &&
			gimp & notify-send " $launcher_app app. profile"
		;;
		"Inkscape")
			xsetwacom set "$PAD" Button 1 key b &&
			xsetwacom set "$PAD" Button 2 key +shift e -shift &&
			xsetwacom set "$PAD" Button 3 key c &&
			xsetwacom set "$PAD" Button 8 key +ctrl z -ctrl &&
			inkscape & notify-send " $launcher_app app. profile"
		;;
		"Olive Video Editor")
			xsetwacom set "$PAD" Button 1 key v &&
			xsetwacom set "$PAD" Button 2 key x &&
			xsetwacom set "$PAD" Button 3 key c &&
			xsetwacom set "$PAD" Button 8 key h &&
		 	olive-editor & notify-send " $launcher_app app. profile"
		;;

	esac
}

Button_setting() {
	nbut=`xsetwacom -s get "$PAD" all | grep "Button" | wc -l`

	for number in {1..$nbut}
	do
		buttons+="$number\n"
	done
	launcher_button=$(echo -e "$buttons" | dmenu -i -p "Button: ")
	if [[ $launcher_button -lt "0" ]] || [[ $launcher_button > $nbut ]];then
		notify-send ""
		exit -1
	fi
	if [[ $launcher_button > "3" ]]; then
		launcher_button=$(echo "$launcher_button+4" | bc)
		Button_set $launcher_button
	else if [[ $launcher_button < $nbut ]]; then
			Button_set $launcher_button
		fi
	fi

}

Button_set(){
	tmp=`cat dmw_history`
	if [[ $1 > "7" ]]; then
		nbut=$(echo "$1-4" | bc)
		launcher_but=$(echo -e "" | dmenu -i -p "Function $nbut: ")
	else
		launcher_but=$(echo -e "$tmp\n" | dmenu -i -p "Function $1: ")
	fi
	xsetwacom set "$PAD" Button $1 key $launcher_but
	echo "$launcher_but" >> dmw_history
}

Info_tablet(){
	notify-send " $PAD"

}

# launcher
wacom="Button setting\nApplication profiles\nScreen Locking\nRotate Pad\nInfo\nManual\n"
launcher_wacom=$(echo -e "$wacom" | dmenu -i -p "dmenuWacom")
[[ "$launcher_wacom" = "" ]] && exit 1

case $launcher_wacom in
	"Button setting") Button_setting;;
	"Application profiles") Application_profiles;;
	"Screen Locking") ScreenLocking;;
	"Rotate Pad") ScreenRotation;;
	"Info") Info_tablet;;
	"Manual") $TERM -e man dmenuWacom;;
esac

